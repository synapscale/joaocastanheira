# Configuration for Sub-agent 1 Orchestrator (src/agents/sub_agents/sub_agent_1/agent.py)
# This file defines high-level settings for sub-agent 1.

agent_name: "SubAgent1_Specialist"
agent_id: "sub_agent_1"

# Description of this sub-agent's specific function or domain.
# This helps the main agent (and developers) understand its purpose.
# Example: "Handles detailed product information retrieval and comparison."
agent_description: "[Defina aqui a função específica do Sub-agente 1]"

# Default behavior settings for this sub-agent
default_language: "pt-BR" # Can inherit from main agent or have its own default

# Feature flags specific to this sub-agent
feature_flags:
  # Example: If this sub-agent uses its own small, specialized knowledge base
  # enable_local_rag: false
  log_sub_agent_trace: true

# Configuration for how this sub-agent should handle errors
error_handling:
  # Instructs the sub-agent on how to report errors back to the main agent.
  # Options: "return_error_message", "raise_exception"
  error_reporting_strategy: "return_error_message"
  default_error_prefix: "Erro no Sub-agente 1: "

# If this sub-agent can call other tools (besides returning a final response)
# they would be defined in a tools/tools.yaml within this sub_agent_1 directory.
# For now, assuming sub-agents are primarily focused on a specific task and might not have complex tools.
# allowed_tools: []

# Placeholder for any other sub-agent-specific settings.
# For example, if it has specific data sources it connects to (other than the main KB).
# custom_data_source_config_path: "src/agents/sub_agents/sub_agent_1/data_source_config.yaml"

